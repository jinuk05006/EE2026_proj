module group_task( input [3:0] state,
                    inout PS2Clk, 
                    inout PS2Data,
                    input clock, 
                    input [15:0] sw,
                    output [6:0] JB,
                    output [15:0] led,
                    output reg [6:0] seg = 7'b1111111,
                    output reg [3:0] an = 4'b1111,
                    output reg dp = 1,
                    output reg [3:0] state_out =0
    );
    
wire clock_6p25mhz;
wire clock_45hz;
wire clock_5hz;
wire frame_begin;
wire sending_pixels;
wire sample_pixel;
wire [12:0] pixel_index;
wire [15:0] oled_data2; //change back to reg
reg count = 0;

    
    //mouse
wire [11:0] xpos;
wire [11:0] ypos;
wire [3:0] zpos;
wire left;
wire mid;
wire right;
wire new_event;
//paint
wire [11:0] mouse_press_x;
wire [11:0] mouse_press_y;
wire mr, ml;

reg [5:0] led_status;
reg [4:0] LD11_15 = 0;
reg [9:0] LD0_9 = 0;
wire [6:0] seg_paint;

clock_divider d1 (clock, 9999999, clock_5hz);
clock_divider d2 (clock, 7, clock_6p25mhz);

MouseCtl m1 (clock,
             0,
             xpos,
             ypos,
             zpos,
             left,
             mid,
             right,
             new_event,
             0,0,0,0,0,
             PS2Clk,
             PS2Data);

reg [31:0] COUNT_VAL = 0;

always @(posedge clock) begin
    if (state == 0) begin
        if (sw[3] == 1) begin
            state_out <= 4;
            end
        else if (sw[3] == 0 && sw[2] == 1) begin
            state_out <= 3;
            end
        else if (sw[3] == 0 && sw[2] == 0 && sw[1] == 1) begin
            state_out <= 2;
            end
    
         else if (sw[3] == 0 && sw[2] == 0 && sw[1] == 0 && sw[0] == 1) begin
            state_out <= 1;
            end          
              
        else begin 
            state_out <= 0;
            led_status <= {LD11_15, clock_5hz};
            COUNT_VAL <= (COUNT_VAL == 1499997) ? 0 : COUNT_VAL + 1;
            if (COUNT_VAL == 0) begin
                seg[6:0] <= 7'b1000001;
                an[3:0] <= 4'b0111;
                dp <= 1;
            end
            if (COUNT_VAL == 499999) begin
                seg[6:0] <= 7'b0001000;
                an[3:0] <= 4'b1011;
                dp <= 1;
            end
            if (COUNT_VAL == 999998) begin
                seg[6:0] <= 7'b1000111;
                an[3:0] <= 4'b1101;
                dp <= 0;
            end
        end
    end
end

paint p1 (clock,left,right,1,xpos,ypos,pixel_index,led[9:0],ml,mr,mouse_press_x,mouse_press_y,seg_paint,oled_data2);

Oled_Display oled1 (clock_6p25mhz,
                    0, 
                    frame_begin, 
                    sending_pixels,
                    sample_pixel, 
                    pixel_index, 
                    oled_data2, 
                    JB[0],JB[1],JB[2],JB[3],JB[4],JB[5],JB[6]); 

assign led = {led_status,led[9:0]};

endmodule
